//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-646 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.11.18 at 11:16:54 AM EET 
//


package org.senro.ui.template.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IteratorType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="IteratorType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.siveco.ro/senro/ComponentTemplate}UIComponentType">
 *       &lt;sequence>
 *         &lt;choice maxOccurs="unbounded">
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Label"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}TextField"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}TextArea"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}DateField"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}ComboBox"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}CheckBox"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Button"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Grid"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Template"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Iterator"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Conditional"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}Tree"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}TreeNode"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}GridAllocatorRenderer"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}List"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}TabPanel"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}TabPage"/>
 *           &lt;element ref="{http://www.siveco.ro/senro/ComponentTemplate}SwitchComponent"/>
 *         &lt;/choice>
 *         &lt;element name="CurrentItem" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *         &lt;element name="CurrentIndex" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="list" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="filterCondition" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IteratorType", propOrder = {
    "labelOrTextFieldOrTextArea",
    "currentItem",
    "currentIndex"
})
public class IteratorType
    extends UIComponentType
{

    @XmlElements({
        @XmlElement(name = "DateField", type = DateFieldType.class),
        @XmlElement(name = "TabPanel", type = TabPanelType.class),
        @XmlElement(name = "GridAllocatorRenderer", type = GridAllocatorRendererType.class),
        @XmlElement(name = "SwitchComponent", type = SwitchComponentType.class),
        @XmlElement(name = "Grid", type = GridType.class),
        @XmlElement(name = "Label", type = LabelType.class),
        @XmlElement(name = "Button", type = ButtonType.class),
        @XmlElement(name = "TextArea", type = TextAreaType.class),
        @XmlElement(name = "TextField", type = TextFieldType.class),
        @XmlElement(name = "Tree", type = TreeType.class),
        @XmlElement(name = "TreeNode", type = TreeNodeType.class),
        @XmlElement(name = "Template", type = TemplateType.class),
        @XmlElement(name = "TabPage", type = TabPageType.class),
        @XmlElement(name = "CheckBox", type = CheckBoxType.class),
        @XmlElement(name = "ComboBox", type = ComboBoxType.class),
        @XmlElement(name = "Conditional", type = ConditionalType.class),
        @XmlElement(name = "List", type = ListType.class),
        @XmlElement(name = "Iterator", type = IteratorType.class)
    })
    protected List<Object> labelOrTextFieldOrTextArea;
    @XmlElement(name = "CurrentItem")
    protected Object currentItem;
    @XmlElement(name = "CurrentIndex")
    protected Object currentIndex;
    @XmlAttribute(required = true)
    protected String list;
    @XmlAttribute
    protected String filterCondition;

    /**
     * Gets the value of the labelOrTextFieldOrTextArea property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the labelOrTextFieldOrTextArea property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabelOrTextFieldOrTextArea().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DateFieldType }
     * {@link TabPanelType }
     * {@link GridAllocatorRendererType }
     * {@link SwitchComponentType }
     * {@link GridType }
     * {@link LabelType }
     * {@link ButtonType }
     * {@link TextAreaType }
     * {@link TextFieldType }
     * {@link TreeType }
     * {@link TreeNodeType }
     * {@link TemplateType }
     * {@link TabPageType }
     * {@link CheckBoxType }
     * {@link ComboBoxType }
     * {@link ConditionalType }
     * {@link ListType }
     * {@link IteratorType }
     * 
     * 
     */
    public List<Object> getLabelOrTextFieldOrTextArea() {
        if (labelOrTextFieldOrTextArea == null) {
            labelOrTextFieldOrTextArea = new ArrayList<Object>();
        }
        return this.labelOrTextFieldOrTextArea;
    }

    /**
     * Gets the value of the currentItem property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getCurrentItem() {
        return currentItem;
    }

    /**
     * Sets the value of the currentItem property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setCurrentItem(Object value) {
        this.currentItem = value;
    }

    /**
     * Gets the value of the currentIndex property.
     * 
     * @return
     *     possible object is
     *     {@link Object }
     *     
     */
    public Object getCurrentIndex() {
        return currentIndex;
    }

    /**
     * Sets the value of the currentIndex property.
     * 
     * @param value
     *     allowed object is
     *     {@link Object }
     *     
     */
    public void setCurrentIndex(Object value) {
        this.currentIndex = value;
    }

    /**
     * Gets the value of the list property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getList() {
        return list;
    }

    /**
     * Sets the value of the list property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setList(String value) {
        this.list = value;
    }

    /**
     * Gets the value of the filterCondition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFilterCondition() {
        return filterCondition;
    }

    /**
     * Sets the value of the filterCondition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFilterCondition(String value) {
        this.filterCondition = value;
    }

}

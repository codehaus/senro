<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!-- ========================= Metadata ========================= -->

    <bean id="reflectionProvider" class="org.senro.metadata.provider.reflection.ReflectionMetadataProvider"/>
    <bean id="hibernateProvider" class="org.senro.metadata.provider.reflection.HibernateMetadataProvider"/>

    <bean id="metadataFactory" class="org.senro.metadata.impl.SenroMetadataFactory">
        <property name="metadataProviders">
            <list>
                <ref bean="reflectionProvider"/>
                <ref bean="hibernateProvider"/>
            </list>
        </property>
    </bean>

    <bean id="metadataManager" class="org.senro.metadata.impl.SenroMetadataManager">
        <property name="metadataFactory" ref="metadataFactory"/>
        <property name="types">
            <bean id="persistenceService.allTypes"
                  class="org.springframework.beans.factory.config.PropertyPathFactoryBean"/>
        </property>
    </bean>


    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location">
            <value>classpath:hibernate.properties</value>
        </property>
    </bean>

    <!-- <bean id="productService" class="org.blah.service.ProductService" /> -->
    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename">
            <value>messages</value>
        </property>
    </bean>


    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:mem:test"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean" autowire="byName">
        <!--
        <property name="mappingDirectoryLocations">
          <list>
            <value>classpath:</value>
          </list>
        </property>-->

        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
        <property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        <property name="hibernateProperties">
            <ref local="hibernateProperties"/>
            <!--
            <props>
              <prop key="hibernate.dialect">
                ${hibernate.dialect}
              </prop>
              <prop key="hibernate.show_sql">
                true
              </prop>
              <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
              <prop key="hibernate.connection.driver_class">${jdbc.driver}</prop>
              <prop key="hibernate.connection.url">${jdbc.url}</prop>
              <prop key="hibernate.connection.username">${jdbc.userid}</prop>
              <prop key="hibernate.connection.password">${jdbc.password}</prop>

            </props>
            -->
        </property>
    </bean>

    <bean id="autoproxy" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          autowire="autodetect"/>
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor"
          autowire="byName"/>
    <bean id="transactionAdvisor" class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor"
          autowire="autodetect"/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
          autowire="autodetect"/>
    <bean id="transactionAttributeSource"
          class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>

    <bean id="persistenceService" class="org.senro.hibernate.HibernatePersistenceService" autowire="autodetect"/>

    <bean id="descriptorService" class="org.senro.descriptor.DescriptorServiceImpl" init-method="init">
        <!--<property name="types">-->
            <!--<bean id="persistenceService.allTypes"-->
                  <!--class="org.springframework.beans.factory.config.PropertyPathFactoryBean"/>-->
        <!--</property>-->
        <property name="descriptorFactory">
            <ref local="descriptorFactory"/>
        </property>
        <property name="decorators">
            <list>
                <ref local="hibernateDescriptorDecorator"/>
                <bean name="annotationDecorator" class="org.senro.descriptor.annotation.AnnotationDecorator"/>
            </list>
        </property>
    </bean>

    <bean id="descriptorFactory" class="org.senro.descriptor.ReflectionDescriptorFactory">
        <property name="methodExcludes">
            <list>
                <value>shouldExclude</value>
                <value>set.*</value>
                <value>get.*</value>
                <value>is.*</value>
                <value>equals</value>
                <value>toString</value>
            </list>
        </property>
        <property name="propertyExcludes">
            <list>
                <value>exclude.*</value>
                <value>class</value>
            </list>
        </property>
    </bean>

    <bean id="hibernateDescriptorDecorator" class="org.senro.hibernate.HibernateDescriptorDecorator" singleton="true">
        <property name="localSessionFactoryBean">
            <ref bean="&amp;sessionFactory"/>
        </property>
        <property name="descriptorFactory">
            <ref local="descriptorFactory"/>
        </property>
    </bean>


    <bean id="wicketApplication" class="org.senro.servlet.SenroApplication"/>


</beans>
